def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        // Netty duplicate
        pickFirst 'META-INF/INDEX.LIST'
        pickFirst 'META-INF/io.netty.versions.properties'

        // Jna duplicate
        pickFirst 'META-INF/AL2.0'
        pickFirst 'META-INF/LGPL2.1'

        // Log4j duplicate
        pickFirst 'META-INF/DEPENDENCIES'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.kalmiagram_flutter"
        minSdk 30
        targetSdk 33
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
    namespace 'com.example.kalmiagram_flutter'
}

flutter {
    source '../..'
}

configurations {
    create("shadow")
    implementation.extendsFrom(shadow)
}

dependencies {
//    implementation 'com.android.support:multidex:1.0.3'

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.3'

    shadow 'io.netty:netty-all:4.1.101.Final'
    shadow 'io.netty:netty-transport-native-epoll:4.1.101.Final'
    shadow 'com.alibaba.fastjson2:fastjson2:2.0.22'

    shadow 'org.slf4j:slf4j-api:2.0.7'
    shadow 'org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0'
    shadow 'org.apache.logging.log4j:log4j-api:2.19.0'
    shadow 'org.apache.logging.log4j:log4j-core:2.19.0'
    shadow 'commons-codec:commons-codec:1.16.0'
    shadow 'commons-io:commons-io:2.13.0'
    //    shadow 'it.unimi.dsi:fastutil:8.5.11'
    shadow 'com.google.guava:guava:32.1.2-jre'
    shadow 'com.github.oshi:oshi-core:6.4.5'
    shadow 'io.github.pcmind:leveldb:1.2'
    shadow 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'

    shadow 'org.jetbrains:annotations:24.0.1'

    shadow 'org.reflections:reflections:0.10.2'

    shadow 'org.bouncycastle:bcprov-jdk18on:1.76'

    shadow 'org.lz4:lz4-java:1.8.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}